{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devin Poore\\\\Projects\\\\react-portfolio2.0\\\\src\\\\Components\\\\ProjectComponents\\\\SpotifyMigrate\\\\index.js\";\nimport React from 'react';\nexport default function spotify_migrate(props) {\n  const youtubeId = \"IuAUrZLW2gI\";\n  const videoDivStyle = {\n    position: \"relative\",\n    marginBottom: \"1.5rem\",\n    paddingBottom: \"56.25%\"\n    /* 16:9 */\n    ,\n    paddingTop: 25,\n    height: 0,\n    backgroundColor: \"darkgreen\",\n    borderRadius: \"15px\"\n  };\n  const iframeStyle = {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    width: \"100%\",\n    height: \"100%\",\n    borderRadius: \"15px\",\n    border: \"1px solid darkgreen\"\n  };\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"video\",\n    style: videoDivStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"iframe\", {\n    title: \"Spotify Migrate Video Demo\",\n    style: iframeStyle,\n    src: \"https://www.youtube.com/embed/\".concat(youtubeId),\n    frameBorder: \"0\",\n    allow: \"accelerometer; picture-in-picture; gyroscope\",\n    allowfullscreen: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })), React.createElement(\"h6\", {\n    style: {\n      \"color\": props.themeHex\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Background\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Similar to 'Artwave' below, Spotify Migrate was an idea I had a couple years ago, borne out of a desire to divest digitally from facebook. When I made my Spotify account in 2012, I signed up for the service using my facebook account. Since then, my desire to exorcise facebook from my life (for a variety of reasons) has increased dramatically - however, in the same span of time, my Spotify account had become one of my most cherished digital possessions. In the absence (at that time) of a native method by which one could migrate their Spotify data to a new account, I began thinking about how I could build a tool to do just that.\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"I believe that now Spotify affords a way to accomplish this goal, but, given Spotify has a pretty robust API, I still wanted to give building my own version of such an application a shot. I figured it'd be good practice and a good portfolio project. With no access to a user's comprehensive, historic listening data, anything I might build would never truly be able to match the convenience of a native Spotify solution to account data migration, but I still wanted to try building the closest approximation.\"), React.createElement(\"h6\", {\n    style: {\n      \"color\": props.themeHex\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"The Flow\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"ol\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"User authorizes existing user account so Spotify Migrate can access their account information\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Using the access token retrieved from the authorization flow, the Spotify Migrate server queries the user account for all relevant data\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Data is retrieved using recursive\"))), React.createElement(\"h6\", {\n    style: {\n      \"color\": props.themeHex\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Challenges\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"The Spotify API puts some limits on the number of results that are returned per GET request as well as the number of new Spotify resources that can be added via PUT requests\"), React.createElement(\"h6\", {\n    style: {\n      \"color\": props.themeHex\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Lessons Learned\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"async await, closure/lexical scope, auth flow, redux, functional design in react\"));\n}","map":{"version":3,"sources":["C:/Users/Devin Poore/Projects/react-portfolio2.0/src/Components/ProjectComponents/SpotifyMigrate/index.js"],"names":["React","spotify_migrate","props","youtubeId","videoDivStyle","position","marginBottom","paddingBottom","paddingTop","height","backgroundColor","borderRadius","iframeStyle","top","left","width","border","themeHex"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAE3C,QAAMC,SAAS,GAAG,aAAlB;AAEA,QAAMC,aAAa,GAAG;AAClBC,IAAAA,QAAQ,EAAE,UADQ;AAElBC,IAAAA,YAAY,EAAE,QAFI;AAGlBC,IAAAA,aAAa,EAAE;AAAS;AAHN;AAIlBC,IAAAA,UAAU,EAAE,EAJM;AAKlBC,IAAAA,MAAM,EAAE,CALU;AAMlBC,IAAAA,eAAe,EAAE,WANC;AAOlBC,IAAAA,YAAY,EAAE;AAPI,GAAtB;AAUA,QAAMC,WAAW,GAAG;AAChBP,IAAAA,QAAQ,EAAE,UADM;AAEhBQ,IAAAA,GAAG,EAAE,CAFW;AAGhBC,IAAAA,IAAI,EAAE,CAHU;AAIhBC,IAAAA,KAAK,EAAE,MAJS;AAKhBN,IAAAA,MAAM,EAAE,MALQ;AAMhBE,IAAAA,YAAY,EAAE,MANE;AAOhBK,IAAAA,MAAM,EAAE;AAPQ,GAApB;AAUA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII;AAAK,IAAA,SAAS,EAAC,OAAf;AAAuB,IAAA,KAAK,EAAEZ,aAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,KAAK,EAAC,4BADV;AAEI,IAAA,KAAK,EAAEQ,WAFX;AAGI,IAAA,GAAG,0CAAmCT,SAAnC,CAHP;AAII,IAAA,WAAW,EAAC,GAJhB;AAKI,IAAA,KAAK,EAAC,8CALV;AAMI,IAAA,eAAe,MANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAJJ,EAeI;AAAI,IAAA,KAAK,EAAE;AAAE,eAASD,KAAK,CAACe;AAAjB,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfJ,EAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,koBAhBJ,EAuBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,ogBAvBJ,EA8BI;AAAI,IAAA,KAAK,EAAE;AAAE,eAASf,KAAK,CAACe;AAAjB,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA9BJ,EA+BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qGADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+IAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAHJ,CADJ,CA/BJ,EAuCI;AAAI,IAAA,KAAK,EAAE;AAAE,eAASf,KAAK,CAACe;AAAjB,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAvCJ,EAwCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qLAxCJ,EA6CI;AAAI,IAAA,KAAK,EAAE;AAAE,eAASf,KAAK,CAACe;AAAjB,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBA7CJ,EA8CI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wFA9CJ,CADJ;AAsDH","sourcesContent":["import React from 'react';\n\nexport default function spotify_migrate(props) {\n\n    const youtubeId = \"IuAUrZLW2gI\";\n\n    const videoDivStyle = {\n        position: \"relative\",\n        marginBottom: \"1.5rem\",\n        paddingBottom: \"56.25%\" /* 16:9 */,\n        paddingTop: 25,\n        height: 0,\n        backgroundColor: \"darkgreen\",\n        borderRadius: \"15px\"\n    };\n\n    const iframeStyle = {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"100%\",\n        borderRadius: \"15px\",\n        border: \"1px solid darkgreen\",\n    }\n\n    return (\n        <div>\n\n            {/* Credit to Kevin Simper for this chunk of code */}\n            {/* https://medium.com/@kevinsimper/full-width-youtube-embed-with-react-js-responsive-embed-509de7e7c3bf */}\n            <div className=\"video\" style={videoDivStyle}>\n                <iframe\n                    title=\"Spotify Migrate Video Demo\"\n                    style={iframeStyle}\n                    src={`https://www.youtube.com/embed/${youtubeId}`}\n                    frameBorder=\"0\"\n                    allow=\"accelerometer; picture-in-picture; gyroscope\"\n                    allowfullscreen\n                />\n            </div>\n\n            <h6 style={{ \"color\": props.themeHex }}>Background</h6>\n            <p>\n                Similar to 'Artwave' below, Spotify Migrate was an idea I had a couple years ago, borne out of a desire to divest digitally from facebook.\n                When I made my Spotify account in 2012, I signed up for the service using my facebook account. Since then, my desire to exorcise facebook\n                from my life (for a variety of reasons) has increased dramatically - however, in the same span of time, my Spotify account had become one\n                of my most cherished digital possessions. In the absence (at that time) of a native method by which one could migrate their Spotify data to\n                a new account, I began thinking about how I could build a tool to do just that.\n            </p>\n            <p>\n                I believe that now Spotify affords a way to accomplish this goal, but, given Spotify has a pretty robust API, I still wanted to give building\n                my own version of such an application a shot. I figured it'd be good practice and a good portfolio project. With no access to a user's comprehensive,\n                historic listening data, anything I might build would never truly be able to match the convenience of a native Spotify solution to account data\n                migration, but I still wanted to try building the closest approximation.\n            </p>\n\n            <h6 style={{ \"color\": props.themeHex }}>The Flow</h6>\n            <p>\n                <ol>\n                    <li>User authorizes existing user account so Spotify Migrate can access their account information</li>\n                    <li>Using the access token retrieved from the authorization flow, the Spotify Migrate server queries the user account for all relevant data</li>\n                    <li>Data is retrieved using recursive</li>\n                </ol>\n            </p>\n\n            <h6 style={{ \"color\": props.themeHex }}>Challenges</h6>\n            <p>\n                The Spotify API puts some limits on the number of results that are returned per GET request as well as the number of new Spotify resources that can\n                be added via PUT requests\n            </p>\n\n            <h6 style={{ \"color\": props.themeHex }}>Lessons Learned</h6>\n            <p>\n                async await, closure/lexical scope, auth flow, redux, functional design in react\n            </p>\n\n\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}